services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: auto_service_db
    environment:
      POSTGRES_DB: auto_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - auto_service_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: auto_service_backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: auto_service_db
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - auto_service_network
    restart: unless-stopped

  # Frontend (Nginx serving built React app)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - VITE_API_URL=http://localhost:3001/api
    container_name: auto_service_frontend
    ports:
      - "3080:80"
    depends_on:
      - backend
    networks:
      - auto_service_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  auto_service_network:
    driver: bridge